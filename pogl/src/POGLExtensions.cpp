#include "MemCheck.h"
#include "POGLExtensions.h"

#ifndef POGL_SET_EXTENSION_FUNC
#define POGL_SET_EXTENSION_FUNC(Type, Name) Name = (Type)POGLLoadExtension(#Name)
#endif

void* POGLLoadExtension(const char* name) {
#ifdef WIN32
	return wglGetProcAddress(name);
#else
#error not implemented
	return nullptr;
#endif
}

PFNGLGENBUFFERSPROC _poglGenBuffers = nullptr;
PFNGLDELETEBUFFERSPROC _poglDeleteBuffers = nullptr;
PFNGLBINDBUFFERPROC _poglBindBuffer = nullptr;
PFNGLBUFFERDATAPROC _poglBufferData = nullptr;
PFNGLMAPBUFFERPROC _poglMapBuffer = nullptr;
PFNGLMAPBUFFERRANGEPROC _poglMapBufferRange = nullptr;
PFNGLUNMAPBUFFERPROC _poglUnmapBuffer = nullptr;
PFNGLUSEPROGRAMPROC _poglUseProgram = nullptr;
PFNGLUNIFORM1IPROC _poglUniform1i = nullptr;
PFNGLUNIFORM1IVPROC _poglUniform1iv = nullptr;
PFNGLUNIFORM2IVPROC _poglUniform2iv = nullptr;
PFNGLUNIFORM3IVPROC _poglUniform3iv = nullptr;
PFNGLUNIFORM4IVPROC _poglUniform4iv = nullptr;
PFNGLUNIFORM1UIVPROC _poglUniform1uiv = nullptr;
PFNGLUNIFORM2UIVPROC _poglUniform2uiv = nullptr;
PFNGLUNIFORM3UIVPROC _poglUniform3uiv = nullptr;
PFNGLUNIFORM4UIVPROC _poglUniform4uiv = nullptr;
PFNGLUNIFORM1FVPROC _poglUniform1fv = nullptr;
PFNGLUNIFORM2FVPROC _poglUniform2fv = nullptr;
PFNGLUNIFORM3FVPROC _poglUniform3fv = nullptr;
PFNGLUNIFORM4FVPROC _poglUniform4fv = nullptr;
PFNGLUNIFORM1DVPROC _poglUniform1dv = nullptr;
PFNGLUNIFORM2DVPROC _poglUniform2dv = nullptr;
PFNGLUNIFORM3DVPROC _poglUniform3dv = nullptr;
PFNGLUNIFORM4DVPROC _poglUniform4dv = nullptr;
PFNGLUNIFORMMATRIX4FVPROC _poglUniformMatrix4fv = nullptr;
PFNGLUNIFORMMATRIX4DVPROC _poglUniformMatrix4dv = nullptr;
PFNGLCLIENTWAITSYNCPROC _poglClientWaitSync = nullptr;
PFNGLWAITSYNCPROC _poglWaitSync = nullptr;
PFNGLFENCESYNCPROC _poglFenceSync = nullptr;
PFNGLDELETESYNCPROC _poglDeleteSync = nullptr;
PFNGLGENVERTEXARRAYSPROC _poglGenVertexArrays = nullptr;
PFNGLBINDVERTEXARRAYPROC _poglBindVertexArray = nullptr;
PFNGLDELETEVERTEXARRAYSPROC _poglDeleteVertexArrays = nullptr;
PFNGLENABLEVERTEXATTRIBARRAYPROC _poglEnableVertexAttribArray = nullptr;
PFNGLDISABLEVERTEXATTRIBARRAYPROC _poglDisableVertexAttribArray = nullptr;
PFNGLVERTEXATTRIBIPOINTERPROC _poglVertexAttribIPointer = nullptr;
PFNGLVERTEXATTRIBPOINTERPROC _poglVertexAttribPointer = nullptr;
PFNGLVERTEXATTRIBLPOINTERPROC _poglVertexAttribLPointer = nullptr;
PFNGLACTIVETEXTUREPROC _poglActiveTexture = nullptr;
PFNGLBINDSAMPLERPROC _poglBindSampler = nullptr;
PFNGLGENSAMPLERSPROC _poglGenSamplers = nullptr;
PFNGLDELETESAMPLERSPROC _poglDeleteSamplers = nullptr;
PFNGLSAMPLERPARAMETERIPROC _poglSamplerParameteri = nullptr;
PFNGLATTACHSHADERPROC _poglAttachShader = nullptr;
PFNGLCOMPILESHADERPROC _poglCompileShader = nullptr;
PFNGLCREATEPROGRAMPROC _poglCreateProgram = nullptr;
PFNGLCREATESHADERPROC _poglCreateShader = nullptr;
PFNGLDELETEPROGRAMPROC _poglDeleteProgram = nullptr;
PFNGLDELETESHADERPROC _poglDeleteShader = nullptr;
PFNGLDETACHSHADERPROC _poglDetachShader = nullptr;
PFNGLSHADERSOURCEPROC _poglShaderSource = nullptr;
PFNGLGETSHADERIVPROC _poglGetShaderiv = nullptr;
PFNGLGETSHADERINFOLOGPROC _poglGetShaderInfoLog = nullptr;
PFNGLLINKPROGRAMPROC _poglLinkProgram = nullptr;
PFNGLGETPROGRAMIVPROC _poglGetProgramiv = nullptr;
PFNGLGETPROGRAMINFOLOGPROC _poglGetProgramInfoLog = nullptr;
PFNGLGETACTIVEUNIFORMPROC _poglGetActiveUniform = nullptr;
PFNGLGETUNIFORMLOCATIONPROC _poglGetUniformLocation = nullptr;
PFNGLBINDFRAMEBUFFERPROC _poglBindFramebuffer = nullptr;
PFNGLBINDRENDERBUFFERPROC _poglBindRenderbuffer = nullptr;
PFNGLGENFRAMEBUFFERSPROC _poglGenFramebuffers = nullptr;
PFNGLDELETERENDERBUFFERSPROC _poglDeleteRenderbuffers = nullptr;
PFNGLDELETEFRAMEBUFFERSPROC _poglDeleteFramebuffers = nullptr;
PFNGLFRAMEBUFFERTEXTUREPROC _poglFramebufferTexture = nullptr;
PFNGLCHECKFRAMEBUFFERSTATUSPROC _poglCheckFramebufferStatus = nullptr;
#ifdef WIN32
PFNWGLCREATECONTEXTATTRIBSARBPROC _powglCreateContextAttribsARB = nullptr;
#endif

bool POGLLoadExtensions()
{
	POGL_SET_EXTENSION_FUNC(PFNGLGENBUFFERSPROC, glGenBuffers);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETEBUFFERSPROC, glDeleteBuffers);
	POGL_SET_EXTENSION_FUNC(PFNGLBINDBUFFERPROC, glBindBuffer);
	POGL_SET_EXTENSION_FUNC(PFNGLBUFFERDATAPROC, glBufferData);
	POGL_SET_EXTENSION_FUNC(PFNGLMAPBUFFERPROC, glMapBuffer);
	POGL_SET_EXTENSION_FUNC(PFNGLMAPBUFFERRANGEPROC, glMapBufferRange);
	POGL_SET_EXTENSION_FUNC(PFNGLUNMAPBUFFERPROC, glUnmapBuffer);
	POGL_SET_EXTENSION_FUNC(PFNGLUSEPROGRAMPROC, glUseProgram);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM1IPROC, glUniform1i);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM1IVPROC, glUniform1iv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM2IVPROC, glUniform2iv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM3IVPROC, glUniform3iv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM4IVPROC, glUniform4iv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM1UIVPROC, glUniform1uiv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM2UIVPROC, glUniform2uiv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM3UIVPROC, glUniform3uiv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM4UIVPROC, glUniform4uiv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM1FVPROC, glUniform1fv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM2FVPROC, glUniform2fv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM3FVPROC, glUniform3fv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM4FVPROC, glUniform4fv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM1DVPROC, glUniform1dv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM2DVPROC, glUniform2dv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM3DVPROC, glUniform3dv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORM4DVPROC, glUniform4dv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv);
	POGL_SET_EXTENSION_FUNC(PFNGLUNIFORMMATRIX4DVPROC, glUniformMatrix4dv);
	POGL_SET_EXTENSION_FUNC(PFNGLCLIENTWAITSYNCPROC, glClientWaitSync);
	POGL_SET_EXTENSION_FUNC(PFNGLWAITSYNCPROC, glWaitSync);
	POGL_SET_EXTENSION_FUNC(PFNGLFENCESYNCPROC, glFenceSync);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETESYNCPROC, glDeleteSync);
	POGL_SET_EXTENSION_FUNC(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays);
	POGL_SET_EXTENSION_FUNC(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays);
	POGL_SET_EXTENSION_FUNC(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray);
	POGL_SET_EXTENSION_FUNC(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray);
	POGL_SET_EXTENSION_FUNC(PFNGLVERTEXATTRIBIPOINTERPROC, glVertexAttribIPointer);
	POGL_SET_EXTENSION_FUNC(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer);
	POGL_SET_EXTENSION_FUNC(PFNGLVERTEXATTRIBLPOINTERPROC, glVertexAttribLPointer);
	POGL_SET_EXTENSION_FUNC(PFNGLACTIVETEXTUREPROC, glActiveTexture);
	POGL_SET_EXTENSION_FUNC(PFNGLBINDSAMPLERPROC, glBindSampler);
	POGL_SET_EXTENSION_FUNC(PFNGLGENSAMPLERSPROC, glGenSamplers);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETESAMPLERSPROC, glDeleteSamplers);
	POGL_SET_EXTENSION_FUNC(PFNGLSAMPLERPARAMETERIPROC, glSamplerParameteri);
	POGL_SET_EXTENSION_FUNC(PFNGLATTACHSHADERPROC, glAttachShader);
	POGL_SET_EXTENSION_FUNC(PFNGLCOMPILESHADERPROC, glCompileShader);
	POGL_SET_EXTENSION_FUNC(PFNGLCREATEPROGRAMPROC, glCreateProgram);
	POGL_SET_EXTENSION_FUNC(PFNGLCREATESHADERPROC, glCreateShader);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETEPROGRAMPROC, glDeleteProgram);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETESHADERPROC, glDeleteShader);
	POGL_SET_EXTENSION_FUNC(PFNGLDETACHSHADERPROC, glDetachShader);
	POGL_SET_EXTENSION_FUNC(PFNGLSHADERSOURCEPROC, glShaderSource);
	POGL_SET_EXTENSION_FUNC(PFNGLGETSHADERIVPROC, glGetShaderiv);
	POGL_SET_EXTENSION_FUNC(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog);
	POGL_SET_EXTENSION_FUNC(PFNGLLINKPROGRAMPROC, glLinkProgram);
	POGL_SET_EXTENSION_FUNC(PFNGLGETPROGRAMIVPROC, glGetProgramiv);
	POGL_SET_EXTENSION_FUNC(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog);
	POGL_SET_EXTENSION_FUNC(PFNGLGETACTIVEUNIFORMPROC, glGetActiveUniform);
	POGL_SET_EXTENSION_FUNC(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation);
	POGL_SET_EXTENSION_FUNC(PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer);
	POGL_SET_EXTENSION_FUNC(PFNGLBINDRENDERBUFFERPROC, glBindRenderbuffer);
	POGL_SET_EXTENSION_FUNC(PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETERENDERBUFFERSPROC, glDeleteRenderbuffers);
	POGL_SET_EXTENSION_FUNC(PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers);
	POGL_SET_EXTENSION_FUNC(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture);
	POGL_SET_EXTENSION_FUNC(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glCheckFramebufferStatus);
#ifdef WIN32
	POGL_SET_EXTENSION_FUNC(PFNWGLCREATECONTEXTATTRIBSARBPROC, wglCreateContextAttribsARB);
#endif
	return true;
}
